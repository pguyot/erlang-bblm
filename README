Erlang Language Module for BBEdit v1.1, (2009/02/15)
----------------------------------------------------

The Erlang Language Module introduces syntax colorization, auto-completion, function navigation and code folding for the Erlang programming language to BBEdit 9.0 and higher.

It recognizes erlang source code (.erl) and include (.hrl) files.

Installation
------------

To install the plug-in, simply double-click it. This will launch BBEdit (or bring it to the front) which will then ask if you want to install the plug-in and relaunch BBEdit.
Alternatively, you can put it manually into "~/Library/Application Support/BBEdit/Language Modules/".

Source code and compilation
---------------------------

The plug-in can be compiled with XCode and BBEdit SDK (it was compiled with the 13/02/2009 version of the SDK).

Current limitations
-------------------

* The module parses functions and attributes properly as long as the code follows standard Erlang practice of declaring functions and attributes immediatly after a new line, and having the rest of the code somewhat indented. In other words, the parser is just a quick and dirty implementation that should usually work as expected. As you might expect, the language module is not robust to interesting uses of parse_transform/2.

* BBEdit cannot open system includes from the popup. This is because includes, as defined as:
-include_lib("module/include/file.hrl").
are actually located in ERL_ROOT/module-vsn/include/file.hrl, where vsn cannot be detected from the source file. There might be an SDK update to help BBEdit, or in the meanwhile a future version of this language module could put the full path of the file in the popup.

* The module simply ignores pre-processor directives. This means it can be confused by pre-processor magic. Macro invocations are colorized, even if they are not properly defined.

* The list of completions are defined in the Info.plist file, in a very quick & dirty but documented way. There might be a new version that reads all the data from a resource file.

* edoc tags are detected and colored, but not their arguments. Actually, anything starting with @ in a %% comment is colored (triple % works, too). Maybe at some point, the module will only color valid @ tags.

* There is no completion with parameters of functions in the current module, especially those with specifications.

* I didn't exploit the folding types yet. Plus folding always happen for the whole function, not for individual clauses.

* Application resource files, application upgrade files and release files are
recognized, but they do not have a syntax colorization of their own.

Change history
--------------

1.0 (2008/08/30).
        Initial build.

1.1 (2009/02/15).
[FEA]   Functions are now predefined words and are therefore colorized.
[ENH]   @todo in %% comments are reported as ToDo callout items.
[FEA]   Macro invocations are now colorized (?_something).
[ENH]   Added all keywords known by erl_parse:reserved_words/1.
[ENH]   Added functions from the math module.
[ENH]   Recognize .rel, .app and .appup files.

License
-------

Copyright (c) 2008-2009 by Paul Guyot, Semiocast.

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
